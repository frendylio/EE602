================================
= Created By: Frendy Lio
= Date: September 27th
================================

******************************************************************************
Q1 Testing correctness of Point.java
--------------------------------------------
Please write your testing code in the main() method in Point.java

Test 1: p.slopeTo(q)
All Test passed

1.1: p =(1, 2), q = (1, 1), slope = Infinity
1.2: p =(1, 2), q = (1, 2), slope = -Infinity
1.3: p =(1, 2), q = (3, 2), slope = 0.0
1.4: p =(1, 2), q = (-1, -2), slope = 2.0
1.5: p =(1, 2), q = (5, 7), slope = 1.25

1.6: p =(1, 2), q = null, slope = null
The Point provided in the argument is null

Test 2: p.compareTo(q)
All Test passed

2.1: p =(1, 1), q = (1, 1), compareTo = 0
2.2: p =(1, 2), q = (2, 1), compareTo = 1
2.4: p =(1, 2), q = (2, 1), r = (-1, -2), compareTo = 1
2.5: p =(1, 1), q = (-1, -2), compareTo positive (p.compareto(q)) = 1, compareTo negative (q.compareTo(p))= -1

2.6: p =(1, 1), q = null, compareTo = null
The Point provided in the argument is null

Test 3: p.slopeOrder().compare(q, r)
All Test passed

3.1: p, r =(1, 1), q = (1, 1), slopeOrder().compare = 0
3.2: p, r =(1, 2), q = (2, 1), slopeOrder().compare = -1
3.3: p =(1, 2), q = (2, 1), r = (-1, -2), slopeOrder().compare = -1
3.4: p, r =(1, 1), q = (-1, -2), compareTo negative (p.slopeOrder().compareto(r,t)) = -1, compare positive (t.slopeOrder().compareto(p,r))= 1

3.5: Argument 1 is empty
The Point provided in the argument is null
3.5: Argument 2 is empty
The Point provided in the argument is null
3.5: Both arguments are empty
The Point provided in the argument is null

******************************************************************************
Q2 Testing correctness of BruteCollinearPoints
--------------------------------------------
Test 4: All test cases passed
Test 5: All test cases passed
Test 6: All test cases passed
Test 7: All test cases passed
Test 8: All test cases passed

Test 9: All test cases passed

Test 10: Passed
Argument is null
java.lang.NullPointerException: The List Point is empty

Entry in array is null
java.lang.NullPointerException: The List Point has an empty element

Test 11: Passed
java.lang.IllegalArgumentException: There is a Duplicate

******************************************************************************
Q3 Testing correctness of FastCollinearPoints
--------------------------------------------
Test 12: All test passed
Test 13: All test passed
Test 14: All test passed
Test 15: All test passed
Test 16: All test passed
Test 17: All test passed

Test 18: Passed same output as BruteCollinearPoints
9.1 - 2 segments
9.2 - 4 segments
9.3 - 4 segments
9.4 - 6 segments
9.5 - 5 segments
9.6 - 5 segments
9.7 - 0 segments

Test 19: Passed
Argument is null
java.lang.NullPointerException: The List Point is empty

Entry in array is null
java.lang.NullPointerException: The List Point has an empty element

Test 20: Passed
java.lang.IllegalArgumentException: There is a Duplicate

******************************************************************************
Q4 What is the amount of memoery that your Point object used?
--------------------------------------------

In my Point object (Did not count code in the main() section used for debugging)
	- We have 4 int => 4 * 4 = 16
	- We have 4 Point class, each point has 2 int => 4 * 2 * 16 = 128

Since is an Object, we need to add 16 bytes and have the memory be padded
to be a multiple of 8 bytes.

Answer:
16 + 128 + 16 + 0(no padding needed) = 160 bytes